server:
  type: simple
  applicationContextPath: /scigraph
  adminContextPath: /admin
  connector:
    type: http
    port: 9000

applicationContextPath: scigraph

graphConfiguration:
  location: ../SciGraph-core/target/mckbGraph
  neo4jConfig:
      use_memory_mapped_buffers : true
      dump_configuration : true
      neostore.nodestore.db.mapped_memory : 1G
      neostore.relationshipstore.db.mapped_memory : 4G
      neostore.propertystore.db.mapped_memory : 500M
      neostore.propertystore.db.strings.mapped_memory : 500M
      neostore.propertystore.db.arrays.mapped_memory : 500M
  indexedNodeProperties:
      - label
      - category
  exactNodeProperties:
      - label
      - synonym
  curies:
    # base
    '': 'http://www.monarchinitiative.org/'
    'MONARCH': 'http://www.monarchinitiative.org/MONARCH_'
    'MonarchData': 'http://data.monarchinitiative.org/ttl/'
    'MonarchArchive': 'http://archive.monarchinitiative.org/ttl/'
    'dc': 'http://purl.org/dc/elements/1.1/'
    'foaf': 'http://xmlns.com/foaf/0.1/'

    # ontologies
    'BFO': 'http://purl.obolibrary.org/obo/BFO_'
    'CHEBI' : 'http://purl.obolibrary.org/obo/CHEBI_'
    'CHR' : 'http://purl.obolibrary.org/obo/CHR_'
    'CL' : 'http://purl.obolibrary.org/obo/CL_'
    'CLO' : 'http://purl.obolibrary.org/obo/CLO_'
    'CMO' : 'http://purl.obolibrary.org/obo/CMO_'
    'DATA' : 'http://edamontology.org/data_'
    'DC' : 'http://purl.obolibrary.org/obo/DC_'
    'DECIPHER' : 'http://purl.obolibrary.org/obo/DECIPHER_'
    'DOID': 'http://purl.obolibrary.org/obo/DOID_'
    'ECO': 'http://purl.obolibrary.org/obo/ECO_'
    'EFO' : 'http://www.ebi.ac.uk/efo/EFO_'
    'ERO' : 'http://purl.obolibrary.org/obo/ERO_'
    'faldo' : 'http://biohackathon.org/resource/faldo#'
    'FBcv' : 'http://purl.obolibrary.org/obo/FBcv_'
    'FBbt': 'http://purl.obolibrary.org/obo/FBbt_'
    'FBdv': 'http://purl.obolibrary.org/obo/FBdv_'
    'GENO': 'http://purl.obolibrary.org/obo/GENO_'
    'GO' : 'http://purl.obolibrary.org/obo/GO_'
    'HP': 'http://purl.obolibrary.org/obo/HP_'
    'IAO': 'http://purl.obolibrary.org/obo/IAO_'
    'MA': 'http://purl.obolibrary.org/obo/MA_'
    'MESH': 'http://purl.obolibrary.org/obo/MESH_'
    'MP': 'http://purl.obolibrary.org/obo/MP_'
    'NCBITaxon' : 'http://purl.obolibrary.org/obo/NCBITaxon_'
    'OBO': 'http://purl.obolibrary.org/obo/'
    'OIO': 'http://www.geneontology.org/formats/oboInOwl#'
    'OMIM' : 'http://purl.obolibrary.org/obo/OMIM_'
    'Orphanet' : 'http://www.orpha.net/ORDO/Orphanet_'
    'PATO': 'http://purl.obolibrary.org/obo/PATO_'
    'PCO': 'http://purl.obolibrary.org/obo/PCO_'
    'PR': 'http://purl.obolibrary.org/obo/PR_'
    'PT' : 'http://www.animalgenome.org/cgi-bin/amido/term-details.cgi?term=PT:' #FIXME: Other source/link available?
    'PW' : 'http://purl.obolibrary.org/obo/PW_'
    'RO': 'http://purl.obolibrary.org/obo/RO_'
    'SIO' : 'http://semanticscience.org/resource/SIO_'
    'SNOMED' : 'http://purl.obolibrary.org/obo/SNOMED_'
    'SO' : 'http://purl.obolibrary.org/obo/SO_'
    'UBERON' : 'http://purl.obolibrary.org/obo/UBERON_'
    'UMLS' : 'http://purl.obolibrary.org/obo/UMLS_'
    'UO' : 'http://purl.obolibrary.org/obo/UO_'
    'VT' : 'http://purl.obolibrary.org/obo/VT_'
    'XCO' : 'http://purl.obolibrary.org/obo/XCO_'
    'ZFA': 'http://purl.obolibrary.org/obo/ZFA_'
    'ZFS': 'http://purl.obolibrary.org/obo/ZFS_'
    'ZP': 'http://purl.obolibrary.org/obo/ZP_'
    'OBAN': 'http://purl.org/oban/'

    # publication/reference sources
    'DOI' : 'http://dx.doi.org/'
    'ISBN': 'http://www.monarchinitiative.org/ISBN_'
    'ISBN-10': 'http://www.monarchinitiative.org/ISBN10_'
    'ISBN-13': 'http://www.monarchinitiative.org/ISBN13_'
    'ISBN-15': 'http://www.monarchinitiative.org/ISBN15_'
    'J' : 'http://www.informatics.jax.org/reference/J:'
    'PMID': 'http://www.ncbi.nlm.nih.gov/pubmed/'
    'PMCID' : 'http://www.ncbi.nlm.nih.gov/pmc/'
    'AQTLPub' : 'http://www.animalgenome.org/cgi-bin/QTLdb/BT/qabstract?PUBMED_ID='

    # other
    'Annotation': 'http://www.w3.org/ns/oa#Annotation'
    'AQTL' : 'http://identifiers.org/animalqtl/'  # FIXME temporary
    'AQTLTrait': 'http://identifiers.org/animalqtltrait/'  # temporary
    'CCDS' : 'http://www.ncbi.nlm.nih.gov/CCDS/CcdsBrowse.cgi?REQUEST=CCDS&DATA='
    'CGD' : 'http://ohsu.edu/cgd/'
    'ClinVar' : 'http://www.ncbi.nlm.nih.gov/clinvar/'
    'ClinVarVariant' : 'http://www.ncbi.nlm.nih.gov/clinvar/variation/'
    'Coriell' : 'https://catalog.coriell.org/0/Sections/Search/Sample_Detail.aspx?Ref='
    'CoriellCollection' : 'https://catalog.coriell.org/1/'
    'CoriellFamily' : 'https://catalog.coriell.org/0/Sections/BrowseCatalog/FamilyTypeSubDetail.aspx?fam='
    'CoriellIndividual' : 'https://catalog.coriell.org/Search?q='
    'COSMIC' : 'http://cancer.sanger.ac.uk/cosmic/mutation/overview?id='
    'CCDS' : 'http://www.ncbi.nlm.nih.gov/CCDS/CcdsBrowse.cgi?REQUEST=CCDS&DATA='
    'CGD' : 'http://ohsu.edu/cgd/'
    'MMRRC' : 'https://www.mmrrc.org/catalog/sds.php?mmrrc_id='
    'dbSNP' : 'http://www.ncbi.nlm.nih.gov/SNP/'
    'dbSNPIndividual' : 'http://www.ncbi.nlm.nih.gov/SNP/snp_ind.cgi?ind_id='  #FIXME
    'dbVar' : 'http://www.ncbi.nlm.nih.gov/dbvar/'
    'EOM' : 'http://purl.obolibrary.org/obo/EOM_'
    'GeneReviews' : 'http://www.ncbi.nlm.nih.gov/books/'
    'HPO' : 'http://human-phenotype-ontology.org/'  #to be used for persons, though they don't resolve with this
    'JAX' : 'http://jaxmice.jax.org/strain/'
    'KEGG-ds' : 'http://purl.obolibrary.org/KEGG-ds_'
    'KEGG-path' : 'http://www.kegg.jp/dbget-bin/www_bget?path:'
    'KEGG-hsa' : 'http://www.kegg.jp/dbget-bin/www_bget?hsa:'
    'KEGG-ko' : 'http://www.kegg.jp/dbget-bin/www_bget?ko:'
    'MedGen' : 'http://www.ncbi.nlm.nih.gov/medgen/'
    'NCBIGenome' : 'http://www.ncbi.nlm.nih.gov/genome/'
    'NCBIAssembly': 'http://www.ncbi.nlm.nih.gov/assembly/'
    'PANTHER' : 'http://www.pantherdb.org/panther/family.do?clsAccession='   # protein/orthologous families
    'REACT' : 'http://www.reactome.org/PathwayBrowser/#REACT_'
    'UCSC' : 'ftp://hgdownload.cse.ucsc.edu/goldenPath/'
    'HGMD' : 'http://identifiers.org/hgmd/'

    # genes
    'BIOGRID' : 'http://thebiogrid.org/'
    'dictyBase' : 'http://dictybase.org/gene/'
    'EcoGene' : 'http://ecogene.org/gene/'
    'ENSEMBL' : 'http://identifiers.org/ensembl/'
    'FlyBase' : 'http://identifiers.org/FB:'
    'GenBank' : 'http://www.ncbi.nlm.nih.gov/nuccore/'
    'HGNC' : 'http://identifiers.org/hgnc/HGNC:'
    'HPRD' : 'http://www.hprd.org/protein/'
    'IMPC' : 'http://www.mousephenotype.org/data/genes/'  #FIXME
    'MGI': 'http://www.informatics.jax.org/accession/MGI:'
    'miRBase' : 'http://identifiers.org/mirbase/'
    'NCBIGene' : 'http://www.ncbi.nlm.nih.gov/gene/'
    'PomBase' : 'http://identifiers.org/PomBase:'
    'RefSeq' : 'http://www.ncbi.nlm.nih.gov/refseq/?term='
    'RGD' : 'http://rgd.mcw.edu/rgdweb/report/gene/main.html?id='
    'SGD' : 'http://identifiers.org/SGD:'
    'TAIR' : 'http://identifiers.org/TAIR:'
    'WormBase' : 'http://identifiers.org/wormbase/'
    'Xenbase' : 'http://identifiers.org/xenbase/'
    'ZFIN' : 'http://zfin.org/'

    # proteins
    'EC' : 'http://identifiers.org/ec-code/'
    'NCBIProtein' : 'http://www.ncbi.nlm.nih.gov/protein/'
    'PDB' : 'http://identifiers.org/PDB:'
    'SwissProt' : 'http://identifiers.org/SwissProt:'
    'TrEMBL' : 'http://www.uniprot.org/uniprot/'
    'UniProtKB' : 'http://identifiers.org/uniprot/'

    #chemicals
    'CID' : 'http://pubchem.ncbi.nlm.nih.gov/compound/'
    'DrugBank' : 'http://www.drugbank.ca/drugs/'


cypherResources:
    ##################
    ### PHENOTYPES
    ##################

    ## Genes from phenotype
    - path: /dynamic/phenotypes/{phenotype_id}/genes
      query: |
              START phenotype = node:node_auto_index(iri={phenotype_id})
              MATCH path = (gene:gene)<-[:GENO:0000410!*0..1]-(feature)-[:RO:0002200|RO:0002610|RO:0002326!*]->(actualPhenotype)-[:subClassOf|equivalentClass*0..]->(equivalence)-[:equivalentClass*0..]-(phenotype)
              RETURN path
              UNION
              START phenotype = node:node_auto_index(iri={phenotype_id})
              MATCH path = (gene:gene)<-[:GENO:0000410!*0..1]-(feature)<-[:BFO:0000051!*]-(genotype)-[:RO:0002200|RO:0002610|RO:0002326!*]->(actualPhenotype)-[:subClassOf|equivalentClass*0..]->(equivalence)-[:equivalentClass*0..]-(phenotype)
              RETURN path
      operations:
        - summary: Get genes related to a phenotype
          notes: Genes may be related to phenotypes through a feature or a genotype.
          parameters:
            - name: phenotype_id
              description: The ID of the phenotype # try HP:0000528

    ## Diseases from phenotype
    - path: /dynamic/phenotypes/{phenotype_id}/diseases
      query: |
              START phenotype = node:node_auto_index(iri={phenotype_id})
              MATCH path = (disease:disease)<-[:subClassOf*0..]-(:disease)-[:RO:0002200|RO:0002610|RO:0002326!]->(actualPhenotype:Phenotype)-[:subClassOf|equivalentClass*0..]->(equivalence)-[:equivalentClass*0..]-(phenotype)
              RETURN path, disease
      operations:
        - summary: Get diseases for a phenotype
          parameters:
            - name: phenotype_id
              description: The ID of the phenotype # HP:0000963

    ## Features from phenotype
    - path: /dynamic/phenotypes/{phenotype_id}/features
      query: |
              START phenotype=node:node_auto_index(iri={phenotype_id})
              MATCH (drug:drug)<-[rel]-(assoc)-[hasSubject:OBAN:association_has_subject]->(variant)-[hasP:RO:0002200]->(phenotypeInstance:Phenotype)
              MATCH (phenotypeInstance:Phenotype)-[type:type]-(equivOrSub)-[:equivalentClass*0..]-(equivalence)-[sub:subClassOf|equivalentClass*0..]->(phenotype:Phenotype)
              OPTIONAL MATCH (feature)<-[ref:GENO:0000408*0..1]-(equiv)-[eq:sameAs*0..]-(variant)
              OPTIONAL MATCH (phenotypeInstance:Phenotype)-[quality:BFO:0000159]->(relationship)
              OPTIONAL MATCH (assoc)-[hasEvidence:RO:0002558]-(evidence)
              OPTIONAL MATCH (assoc)-[hasSource:dc:source]-(source)
              RETURN DISTINCT drug, rel, assoc, variant, hasSubject, phenotype, hasP, feature, ref, type, eq,
                              phenotypeInstance, evidence, source, hasEvidence, hasSource, equiv, equivOrSub, sub,
                              quality, relationship
      operations:
        - summary: Get features for a phenotype
          parameters:
            - name: phenotype_id
              description: The ID of the phenotype

    ## Genotypes from phenotype
    - path: /dynamic/phenotypes/{phenotype_id}/genotypes
      query: |
              START phenotype = node:node_auto_index(iri={phenotype_id})
              MATCH path = (phenotype)-[:equivalentClass*0..]-(equivalence)<-[:subClassOf|equivalentClass*0..]-(actualPhenotype)<-[:RO:0002200|RO:0002610|RO:0002326!*]-(genotype:genotype)
              RETURN path
              UNION
              START phenotype = node:node_auto_index(iri={phenotype_id})
              MATCH path = (phenotype)-[:equivalentClass*0..]-(equivalence)<-[:subClassOf|equivalentClass*0..]-(actualPhenotype)<-[:RO:0002200|RO:0002610|RO:0002326!*]-(person)-[:GENO:0000222]->(genotype:genotype)
              RETURN path
              UNION
              START phenotype = node:node_auto_index(iri={phenotype_id})
              MATCH path = (phenotype)-[:equivalentClass*0..]-(equivalence)<-[:subClassOf|equivalentClass*0..]-(actualPhenotype)<-[:RO:0002200|RO:0002610|RO:0002326!*]-(variant)-[:GENO:0000382|GENO:0000532]->(genotype:genotype)
              RETURN path
      operations:
        - summary: Get genotypes for a phenotype
          parameters:
            - name: phenotype_id
              description: The ID of the phenotype


    ##################
    ### GENOTYPES
    ##################

    ## Features from genotype
    - path: /dynamic/genotypes/{genotype_id}/features
      query: |
              START genotype=node:node_auto_index(iri={genotype_id})
              MATCH path = (f)<-[:GENO:0000408*0..1]-(feature)<-[:BFO:0000051!*]-(genotype)
              RETURN path
      operations:
        - summary: Get features for a genotype
          parameters:
            - name: genotype_id
              description: The ID of the genotype

    ## Phenotypes from genotype
    - path: /dynamic/genotypes/{genotype_id}/phenotypes
      query: |
              START genotype=node:node_auto_index(iri={genotype_id})
              MATCH path = (genotype)-[hasP:RO:0002200|RO:0002610|RO:0002326!*]->(phenotype)
              RETURN path
      operations:
        - summary: Get direct phenotypes for a genotype
          parameters:
            - name: genotype_id
              description: The ID of the genotype



    ##################
    ### DISEASES
    ##################

    ## Phenotypes from disease
    - path: /dynamic/diseases/{disease_id}/phenotypes
      query: |
              START disease = node:node_auto_index(iri={disease_id})
              MATCH path = (disease)<-[:subClassOf*0..]-()-[:RO:0002200|RO:0002610|RO:0002326!]->(phenotype)
              RETURN distinct path
      operations:
        - summary: Get phenotype for a disease
          parameters:
            - name: disease_id
              description: The ID of the disease # DOID:2490

    ##################
    ### GENES
    ##################

    ## Genotypes from gene
    - path: /dynamic/genes/{gene_id}/genotypes
      query: |
              START genotypeClass = node:node_auto_index(iri='GENO:0000000'),
                    gene = node:node_auto_index(iri={gene_id})
                    MATCH (gene)-[equiv:equivalentClass*0..1]-(ge:gene)<-[geno:GENO:0000408]-(variantLocus)<-[part:BFO:0000051!*]-(genotype)-[:type]->(genotypeClass)
                    RETURN distinct gene, equiv, ge, geno, variantLocus, part, genotype
      operations:
        - summary: Get genotypes for a gene
          parameters:
            - name: gene_id
              description: The ID of the gene # MGI:3583900
              required: true
              type: string
              paramType: path

    ## Homologs from gene
    - path: /dynamic/genes/{gene_id}/homologs
      query: |
              START gene = node:node_auto_index(iri={gene_id})
              MATCH (gene)-[e:equivalentClass*0..2]-(ge:gene)-[homology:${homolog_id}!]-(homolog)
              RETURN distinct gene, e, ge, homology, homolog
      operations:
        - summary: Get homologs for a gene
          parameters:
            - name: gene_id
              description: The ID of the gene # NCBIGene:6469
            - name: homolog_id
              description: The homolog relationship # RO:HOM0000017
              paramType: query

    ##################
    ### FEATURES
    ##################

    ## Phenotypes from feature
    - path: /dynamic/features/{feature_id}/phenotypes
      query: |
              START feature=node:node_auto_index(iri={feature_id})
              OPTIONAL MATCH (drug:drug)<-[rel]-(assoc)-[hasSubject:OBAN:association_has_subject]->(feature)-[:sameAs*0..]-(equiv)-[hasP:RO:0002200]->(phenotype:Phenotype)
              OPTIONAL MATCH (feature)<-[ref:GENO:0000408*0..1]-(equiVariant)-[eq:sameAs*0..]-(variant)-[:sameAs*0..]-(equiv)-[hasP:RO:0002200]->(phenotype:Phenotype)
              OPTIONAL MATCH (phenotype:Phenotype)-[type:type]-(phenotypeClass:Phenotype)
              OPTIONAL MATCH (assoc)-[hasEvidence:RO:0002558]->(evidence)
              OPTIONAL MATCH (assoc)-[hasSource:dc:source]->(source)
              RETURN DISTINCT drug, rel, assoc, variant, hasSubject, phenotype, hasP, feature, ref, type, equiVariant, eq,
                              phenotypeClass, evidence, source, hasEvidence, hasSource, equiv
      operations:
        - summary: Get G2P associations for a sequence feature
          parameters:
            - name: feature_id
              description: The ID of the feature as a URI or Curie (ex COSMIC:476)


    ##################
    ### EVIDENCE
    ##################

    ## Evidence connecting subject_id to object_id
    - path: /dynamic/evidence/{subject_id}/{object_id}
      query: |
              PLANNER RULE
              START subject = node:node_auto_index(iri={subject_id}),
              object = node:node_auto_index(iri={object_id}),
              evidenceCode = node:node_auto_index(iri={evidence_code})
              MATCH path = (subject)-[:equivalentClass*0..1]-(se)<-[:subClassOf*]-(actualSubject)<-[:OBAN:association_has_subject]-(annotation)-[:OBAN:association_has_object]->(actualObject)-[:subClassOf*]->(object),
              (annotation)-[:RO:0002558]->(actualCode)-[:subClassOf*]->(evidenceCode)
              OPTIONAL MATCH path2 = (annotation)-[:source]->(sn)
              RETURN path, path2
      operations:
        - summary: Get evidence for a pair of ids
          parameters:
            - name: subject_id
              description: The subject of the evidence # DOID:2490
            - name: object_id
              description: The object of the evidence # HP:0002060
            - name: evidence_code
              description: The type of evidence to include # ECO:0000501
              paramType: query


    ##################
    ### G2P
    ##################

    ## Genotype to Phenotype Associations given a drug
    - path: /dynamic/chemical/{chemical_id}/g2p
      query: |
              START drug=node:node_auto_index(iri={chemical_id})
              MATCH (drug:drug)<-[rel]-(assoc)-[hasSubject:OBAN:association_has_subject]->(variant)-[hasP:RO:0002200]->(phenotype:Phenotype)
              WITH drug, rel, assoc, hasSubject, variant, hasP, phenotype
              OPTIONAL MATCH (feature)<-[ref:GENO:0000408*0..1]-(equiv)-[eq:sameAs*0..]-(variant)
              WITH drug, rel, assoc, hasSubject, variant, hasP, phenotype, feature, ref, equiv, eq
              OPTIONAL MATCH (phenotype:Phenotype)-[type:type]-(phenotypeClass:Phenotype)
              WITH drug, rel, assoc, hasSubject, variant, hasP, phenotype, feature, ref, equiv, eq, type, phenotypeClass
              OPTIONAL MATCH (phenotype:Phenotype)-[quality:BFO:0000159]->(relationship)
              WITH drug, rel, assoc, hasSubject, variant, hasP, phenotype, feature, ref, equiv, eq, type, phenotypeClass, quality, relationship
              OPTIONAL MATCH (assoc)-[hasEvidence:RO:0002558]-(evidence)
              WITH drug, rel, assoc, hasSubject, variant, hasP, phenotype, feature, ref, equiv, eq, type, phenotypeClass, quality, relationship,
                   hasEvidence, evidence
              OPTIONAL MATCH (assoc)-[hasSource:dc:source]-(source)
              RETURN drug, rel, assoc, hasSubject, variant, hasP, phenotype, feature, ref, equiv, eq, type, phenotypeClass, quality, relationship,
                              hasEvidence, evidence, hasSource, source
      operations:
        - summary: Get G2P associations for a chemical
          parameters:
            - name: chemical_id
              description: The ID of the chemical as a URI or Curie (ex DrugBank:DB00317)

    ## Genotype to Phenotype Associations given a phenotype
    - path: /dynamic/phenotype/{phenotype_id}/g2p
      query: |
              START phenotype=node:node_auto_index(iri={phenotype_id})
              MATCH (drug:drug)<-[rel]-(assoc)-[hasSubject:OBAN:association_has_subject]->(variant)-[hasP:RO:0002200]->(phenotypeInstance:Phenotype)-[type:type]-(equivOrSub)-[:equivalentClass*0..]-(equivalence)-[sub:subClassOf|equivalentClass*0..]->(phenotype:Phenotype)
              WITH phenotype, drug, rel, assoc, hasSubject, variant, hasP, phenotypeInstance, type, equivOrSub, equivalence, sub
              OPTIONAL MATCH (feature)<-[ref:GENO:0000408*0..1]-(equiv)-[eq:sameAs*0..]-(variant)
              WITH phenotype, drug, rel, assoc, hasSubject, variant, hasP, phenotypeInstance, type, equivOrSub, equivalence, sub, feature, ref, equiv, eq
              OPTIONAL MATCH (phenotypeInstance:Phenotype)-[quality:BFO:0000159]->(relationship)
              WITH phenotype, drug, rel, assoc, hasSubject, variant, hasP, phenotypeInstance, type, equivOrSub, equivalence, sub, feature, ref, equiv, eq, quality, relationship
              OPTIONAL MATCH (assoc)-[hasEvidence:RO:0002558]-(evidence)
              WITH phenotype, drug, rel, assoc, hasSubject, variant, hasP, phenotypeInstance, type, equivOrSub, equivalence, sub, feature, ref, equiv, eq, quality, relationship, hasEvidence, evidence
              OPTIONAL MATCH (assoc)-[hasSource:dc:source]-(source)
              RETURN drug, rel, assoc, variant, hasSubject, phenotype, hasP, feature, ref, type, eq,
                              phenotypeInstance, evidence, source, hasEvidence, hasSource, equiv, equivOrSub, sub,
                              quality, relationship
      operations:
        - summary: Get G2P associations for a phenotype,
          parameters:
            - name: phenotype_id
              description: The ID of the phenotype or disease as a URI or Curie (ex DOID:4830), will also return subclasses of disease

    ## Genotype to Phenotype Associations given a variant
    - path: /dynamic/variant/{variant_id}/g2p
      query: |
              START variant=node:node_auto_index(iri={variant_id})
              MATCH (drug:drug)<-[rel]-(assoc)-[hasSubject:OBAN:association_has_subject]->(variant)-[:sameAs*0..]-(equiv)-[hasP:RO:0002200]->(phenotype:Phenotype)
              OPTIONAL MATCH (feature)<-[ref:GENO:0000408*0..1]-(equiVariant)-[eq:sameAs*0..]-(variant)
              OPTIONAL MATCH (phenotype:Phenotype)-[type:type]-(phenotypeClass:Phenotype)
              OPTIONAL MATCH (phenotype:Phenotype)-[quality:BFO:0000159]->(relationship)
              OPTIONAL MATCH (assoc)-[hasEvidence:RO:0002558]-(evidence)
              OPTIONAL MATCH (assoc)-[hasSource:dc:source]-(source)
              RETURN DISTINCT drug, rel, assoc, variant, hasSubject, phenotype, hasP, feature, ref, type, equiVariant, eq,
                              phenotypeClass, evidence, source, hasEvidence, hasSource, equiv, quality, relationship
      operations:
        - summary: Get G2P associations for a variant
          parameters:
            - name: variant_id
              description: The ID of the variant as a URI or Curie (ex COSMIC:476)


    ## Genotype to Phenotype Associations given a drug relationship
    - path: /dynamic/relationships/{relationship_id}/g2p
      query: |
              START relationship=node:node_auto_index(iri={relationship_id})
              MATCH (drug:drug)<-[rel]-(assoc)-[hasSubject:OBAN:association_has_subject]->(variant)-[hasP:RO:0002200]->(phenotype:Phenotype)-[quality:BFO:0000159]->(relationship)
              OPTIONAL MATCH (feature)<-[ref:GENO:0000408*0..1]-(equiv)-[eq:sameAs*0..]-(variant)
              OPTIONAL MATCH (phenotype:Phenotype)-[type:type]-(phenotypeClass:Phenotype)
              OPTIONAL MATCH (assoc)-[hasEvidence:RO:0002558]-(evidence)
              OPTIONAL MATCH (assoc)-[hasSource:dc:source]-(source)
              RETURN DISTINCT drug, variant, hasSubject, hasP, phenotype, feature, ref, type, phenotypeClass, quality,
                              relationship, evidence, source, assoc, rel, hasEvidence, hasSource, equiv, eq

      operations:
        - summary: Get G2P associations for a relationship
          parameters:
            - name: relationship_id
              description: The ID of the relationship as a URI or Curie (ex CGD:sensitivity)

    ## Genotype to Phenotype Associations given a gene
    - path: /dynamic/gene/{gene_id}/g2p
      query: |
              START feature=node:node_auto_index(iri={gene_id})
              MATCH (drug:drug)<-[rel]-(assoc)-[hasSubject:OBAN:association_has_subject]->(variant)-[hasP:RO:0002200]->(phenotype:Phenotype)
              MATCH (feature)<-[ref:GENO:0000408]-(equiv)-[eq:sameAs*0..]-(variant)
              OPTIONAL MATCH (phenotype:Phenotype)-[type:type]-(phenotypeClass:Phenotype)
              OPTIONAL MATCH (phenotype:Phenotype)-[quality:BFO:0000159]->(relationship)
              OPTIONAL MATCH (assoc)-[hasEvidence:RO:0002558]-(evidence)
              OPTIONAL MATCH (assoc)-[hasSource:dc:source]-(source)
              RETURN DISTINCT drug, variant, hasSubject, hasP, phenotype, feature, ref, type, phenotypeClass, eq,
                              evidence, source, assoc, rel, hasEvidence, hasSource, equiv, quality, relationship

      operations:
        - summary: Get G2P associations for a gene
          parameters:
            - name: gene_id
              description: The ID of the relationship as a URI or Curie (ex NCBIGene:2261)

     ## Genotype to Phenotype Associations given a genomic position(s)
    - path: /dynamic/position/g2p
      query: |
              START start_pos=node:node_auto_index(iri="http://www.monarchinitiative.org/_${genome_build}chr${chromosome}-${start}"),
                    end_pos=node:node_auto_index(iri="http://www.monarchinitiative.org/_${genome_build}chr${chromosome}-${end}")
              MATCH (start_pos)<-[:faldo:begin]-(region)<-[:faldo:location]-(variant)
              MATCH (end_pos)<-[:faldo:end]-(region)<-[:faldo:location]-(variant)
              OPTIONAL MATCH (drug:drug)<-[rel]-(assoc)-[hasSubject:OBAN:association_has_subject]->(variant)-[hasP:RO:0002200]->(phenotype:Phenotype)
              OPTIONAL MATCH (feature)<-[ref:GENO:0000408*0..1]-(equiv)-[eq:sameAs*0..]-(variant)
              OPTIONAL MATCH (phenotype:Phenotype)-[type:type]-(phenotypeClass:Phenotype)
              OPTIONAL MATCH (phenotype:Phenotype)-[quality:BFO:0000159]->(relationship)
              OPTIONAL MATCH (assoc)-[hasEvidence:RO:0002558]-(evidence)
              OPTIONAL MATCH (assoc)-[hasSource:dc:source]-(source)
              RETURN DISTINCT start_pos, end_pos, variant, feature, ref, hasP, type, phenotypeClass, eq,
                              drug, rel, assoc, hasSubject, hasEvidence, evidence, hasSource, source, equiv, quality, relationship
      operations:
        - summary: Get G2P associations given genomic coordinates
          parameters:
            - name: start
              description: The starting genomic coordinate (ex 55152093)
              paramType: query
            - name: end
              description: The ending genomic coordinate (ex 55152093)
              paramType: query
            - name: chromosome
              description: The alphanumeric chromosomal ID (1-22,X,Y) (ex 4)
              paramType: query
            - name: genome_build
              description: The genome build (ex hg19)
              paramType: query

    ##################
    ### Extended
    ##################

    ## Genotype to Phenotype Associations given a drug, disease, and variant
    - path: /dynamic/g2p
      query: |
              PLANNER RULE
              START drug=node:node_auto_index(iri={chemical}),
                    phenotype=node:node_auto_index(iri={disease}),
                    variant=node:node_auto_index(iri={variant})
              MATCH (drug:drug)<-[rel]-(assoc)-[hasSubject:OBAN:association_has_subject]->(variant)-[:sameAs*0..]-(equiv)-[hasP:RO:0002200]->(phenotypeInstance:Phenotype)
              MATCH (phenotypeInstance:Phenotype)-[type:type]-(equivOrSub)-[:equivalentClass*0..]-(equivalence)-[sub:subClassOf|equivalentClass*0..]->(phenotype:Phenotype)
              OPTIONAL MATCH (feature)<-[ref:GENO:0000408*0..1]-(equiVariant)-[eq:sameAs*0..]-(variant)
              OPTIONAL MATCH (phenotypeInstance:Phenotype)-[quality:BFO:0000159]->(relationship)
              OPTIONAL MATCH (assoc)-[hasEvidence:RO:0002558]-(evidence)
              OPTIONAL MATCH (assoc)-[hasSource:dc:source]-(source)
              RETURN DISTINCT drug, rel, assoc, variant, hasSubject, phenotype, hasP, feature, ref, type, equiVariant, eq,
                              phenotypeInstance, evidence, source, hasEvidence, hasSource, equiv, equivOrSub, sub, quality, relationship
      operations:
        - summary: Get G2P associations for a chemical, variant, and disease
          parameters:
            - name: chemical
              description: The ID of the chemical as a URI or Curie (ex DrugBank:DB08881)
              paramType: query
            - name: disease
              description: The ID of the phenotype as a URI or Curie (ex DOID:0070004), will also return subclasses of disease
              paramType: query
            - name: variant
              description: The ID of the variant as a URI or Curie (ex COSMIC:476)
              paramType: query

    ## Search for drug interactions given a disease and variant
    - path: /dynamic/{disease_id}/drug
      query: |
              PLANNER RULE
              START phenotype=node:node_auto_index(iri={disease_id}),
                    variant=node:node_auto_index(iri={variant})
              MATCH (drug:drug)<-[rel]-(assoc)-[hasSubject:OBAN:association_has_subject]->(variant)-[:sameAs*0..]-(equiv)-[hasP:RO:0002200]->(phenotypeInstance:Phenotype)
              MATCH (phenotypeInstance:Phenotype)-[type:type]-(equivOrSub)-[:equivalentClass*0..]-(equivalence)-[sub:subClassOf|equivalentClass*0..]->(phenotype:Phenotype)
              OPTIONAL MATCH (feature)<-[ref:GENO:0000408*0..1]-(equiVariant)-[eq:sameAs*0..]-(variant)
              OPTIONAL MATCH (phenotypeInstance:Phenotype)-[quality:BFO:0000159]->(relationship)
              OPTIONAL MATCH (assoc)-[hasEvidence:RO:0002558]-(evidence)
              OPTIONAL MATCH (assoc)-[hasSource:dc:source]-(source)
              RETURN DISTINCT drug, rel, assoc, variant, hasSubject, phenotype, hasP, feature, ref, type, eq, equiVariant,
                              phenotypeInstance, evidence, source, hasEvidence, hasSource, equiv, equivOrSub, sub, quality, relationship
      operations:
        - summary: Search for drug interactions given a disease and variant
          parameters:
            - name: disease_id
              description: The ID of the phenotype as a URI or Curie (ex DOID:0070004), will also return subclasses of disease
            - name: variant
              description: The ID of the variant as a URI or Curie (ex COSMIC:476)
              paramType: query


    ## Search for variants and variant phenotype associations given a disease and gene
    - path: /dynamic/{disease_id}/gene
      query: |
              PLANNER RULE
              START phenotype=node:node_auto_index(iri={disease_id}),
                    gene=node:node_auto_index(iri={gene_id})
              MATCH (gene)<-[ref:GENO:0000408*0..1]-(equiVariant)-[eq:sameAs*0..]-(variant)
              WITH gene, ref, equiVariant, eq, variant, phenotype
              MATCH (variant)-[:sameAs*0..]-(equiv)-[hasP:RO:0002200]->(phenotypeInstance:Phenotype)
              WITH gene, ref, equiVariant, eq, variant, equiv, hasP, phenotypeInstance, phenotype
              MATCH (phenotypeInstance:Phenotype)-[type:type]-(equivOrSub)-[:equivalentClass*0..]-(equivalence)-[sub:subClassOf|equivalentClass*0..]->(phenotype:Phenotype)
              WITH gene, ref, equiVariant, eq, variant, equiv, hasP, phenotypeInstance, type, equivOrSub, equivalence, sub, phenotype
              OPTIONAL MATCH (phenotypeInstance:Phenotype)-[quality:BFO:0000159]->(relationship)
              WITH gene, ref, equiVariant, eq, variant, equiv, hasP, phenotypeInstance, type, equivOrSub, equivalence, sub, phenotype, quality, relationship
              OPTIONAL MATCH (drug:drug)<-[rel]-(assoc)-[hasSubject:OBAN:association_has_subject]->(variant)
              WITH gene, ref, equiVariant, eq, variant, equiv, hasP, phenotypeInstance, type, equivOrSub, equivalence, sub, phenotype,  quality, relationship, hasSubject, rel, assoc, drug
              OPTIONAL MATCH (assoc)-[hasEvidence:RO:0002558]-(evidence)
              WITH gene, ref, equiVariant, eq, variant, equiv, hasP, phenotypeInstance, type, equivOrSub, equivalence, sub, phenotype, quality, relationship, hasSubject, rel, assoc, hasEvidence, evidence, drug
              OPTIONAL MATCH (assoc)-[hasSource:dc:source]-(source)
              RETURN drug, rel, assoc, variant, hasSubject, phenotype, hasP, gene, ref, type, eq, equiVariant,
                              phenotypeInstance, evidence, source, hasEvidence, hasSource, equiv, equivOrSub, sub, quality, relationship
      operations:
        - summary: Search for drug interactions given a disease and variant
          parameters:
            - name: disease_id
              description: The ID of the phenotype as a URI or Curie (ex DOID:0070004), will also return subclasses of disease
            - name: gene_id
              description: The ID of the gene as a URI or Curie (ex NCBIGene:673)
              paramType: query


    ## Search for variants given a drug and disease
    - path: /dynamic/{disease_id}/variant
      query: |
              PLANNER RULE
              START drug=node:node_auto_index(iri={chemical_id}),
                    phenotype=node:node_auto_index(iri={disease_id})
              MATCH (drug:drug)<-[rel]-(assoc)-[hasSubject:OBAN:association_has_subject]->(variant)-[hasP:RO:0002200]->(phenotypeInstance:Phenotype)
              MATCH (phenotypeInstance:Phenotype)-[type:type]-(equivOrSub)-[:equivalentClass*0..]-(equivalence)-[sub:subClassOf|equivalentClass*0..]->(phenotype:Phenotype)
              OPTIONAL MATCH (feature)<-[ref:GENO:0000408*0..1]-(equiv)-[eq:sameAs*0..]-(variant)
              OPTIONAL MATCH (phenotypeInstance:Phenotype)-[quality:BFO:0000159]->(relationship)
              OPTIONAL MATCH (assoc)-[hasEvidence:RO:0002558]-(evidence)
              OPTIONAL MATCH (assoc)-[hasSource:dc:source]-(source)
              RETURN DISTINCT drug, rel, assoc, variant, hasSubject, phenotype, hasP, feature, ref,type, eq,
                              phenotypeInstance, evidence, source, hasEvidence, hasSource, equiv, equivOrSub, sub, quality, relationship
      operations:
        - summary: Search for variants given a drug and disease
          parameters:
            - name: disease_id
              description: The ID of the phenotype as a URI or Curie (ex DOID:0070004), will also return subclasses of disease
            - name: chemical_id
              description: The ID of the chemical as a URI or Curie (ex DrugBank:DB08881)
              paramType: query

     ## Genotype to Phenotype Associations given a genomic position(s) and disease
    - path: /dynamic/position/disease
      query: |
              PLANNER RULE
              START start_pos=node:node_auto_index(iri="http://www.monarchinitiative.org/_${genome_build}chr${chromosome}-${start}"),
                    end_pos=node:node_auto_index(iri="http://www.monarchinitiative.org/_${genome_build}chr${chromosome}-${end}"),
                    phenotype=node:node_auto_index(iri={disease_id})
              MATCH (start_pos)<-[:faldo:begin]-(region)<-[:faldo:location]-(variant)
              MATCH (end_pos)<-[:faldo:end]-(region)<-[:faldo:location]-(variant)
              MATCH (variant)-[hasP:RO:0002200]->(phenotypeInstance:Phenotype)
              MATCH (phenotypeInstance:Phenotype)-[type:type]-(equivOrSub)-[:equivalentClass*0..]-(equivalence)-[sub:subClassOf|equivalentClass*0..]->(phenotype:Phenotype)
              OPTIONAL MATCH (feature)<-[ref:GENO:0000408*0..1]-(equiv)-[eq:sameAs*0..]-(variant)
              OPTIONAL MATCH (drug:drug)<-[rel]-(assoc)-[hasSubject:OBAN:association_has_subject]->(variant)
              OPTIONAL MATCH (phenotypeInstance:Phenotype)-[quality:BFO:0000159]->(relationship)
              OPTIONAL MATCH (assoc)-[hasEvidence:RO:0002558]-(evidence)
              OPTIONAL MATCH (assoc)-[hasSource:dc:source]-(source)
              RETURN DISTINCT start_pos, end_pos, variant, feature, ref, hasP, type, phenotypeInstance, phenotype, eq,
                              drug, rel, assoc, hasSubject, hasEvidence, evidence, hasSource, source, equiv, equivOrSub, sub, quality, relationship
      operations:
        - summary: Get G2P associations given genomic coordinates and a disease
          parameters:
            - name: disease_id
              description: The ID of the phenotype as a URI or Curie (ex OMIM:606764), will also return subclasses of disease
              paramType: query
            - name: start
              description: The starting genomic coordinate (ex 55152093)
              paramType: query
            - name: end
              description: The ending genomic coordinate (ex 55152093)
              paramType: query
            - name: chromosome
              description: The alphanumeric chromosomal ID (1-22,X,Y) (ex 4)
              paramType: query
            - name: genome_build
              description: The genome build (ex hg19)
              paramType: query


        ## Search for variants and variant phenotype associations given a disease and gene
    - path: /dynamic/position/gene
      query: |
              PLANNER RULE
              START start_pos=node:node_auto_index(iri="http://www.monarchinitiative.org/_${genome_build}chr${chromosome}-${start}"),
                    end_pos=node:node_auto_index(iri="http://www.monarchinitiative.org/_${genome_build}chr${chromosome}-${end}"),
                    gene=node:node_auto_index(iri={gene_id})
              MATCH (start_pos)<-[:faldo:begin]-(region)<-[:faldo:location]-(variant)
              MATCH (end_pos)<-[:faldo:end]-(region)<-[:faldo:location]-(variant)
              MATCH (gene)<-[ref:GENO:0000408*0..1]-(equiVariant)-[eq:sameAs*0..]-(variant)
              MATCH (variant)-[:sameAs*0..]-(equiv)-[hasP:RO:0002200]->(phenotypeInstance:Phenotype)
              OPTIONAL MATCH (phenotypeInstance:Phenotype)-[quality:BFO:0000159]->(relationship)
              OPTIONAL MATCH (drug:drug)<-[rel]-(assoc)-[hasSubject:OBAN:association_has_subject]->(variant)
              OPTIONAL MATCH (assoc)-[hasEvidence:RO:0002558]-(evidence)
              OPTIONAL MATCH (assoc)-[hasSource:dc:source]-(source)
              RETURN drug, rel, assoc, variant, hasSubject, hasP, gene, ref, eq, equiVariant,
                              phenotypeInstance, evidence, source, hasEvidence, hasSource, equiv, quality, relationship
      operations:
        - summary: Search for drug interactions given a disease and variant
          parameters:
            - name: gene_id
              description: The ID of the gene as a URI or Curie (ex NCBIGene:5156)
              paramType: query
            - name: start
              description: The starting genomic coordinate (ex 55152093)
              paramType: query
            - name: end
              description: The ending genomic coordinate (ex 55152093)
              paramType: query
            - name: chromosome
              description: The alphanumeric chromosomal ID (1-22,X,Y) (ex 4)
              paramType: query
            - name: genome_build
              description: The genome build (ex hg19)
              paramType: query
